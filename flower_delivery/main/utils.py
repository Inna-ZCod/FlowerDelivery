#
# –û–±—â–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –∫–æ–¥–∞
# -------------------------------------------------------
#

from django.conf import settings
from .models import Review



# –ü–µ—Ä–µ–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
STATUS_TRANSLATION = {
    "accepted": "–ü—Ä–∏–Ω—è—Ç",
    "assembling": "–í —Å–±–æ—Ä–∫–µ",
    "on_the_way": "–í –ø—É—Ç–∏",
    "delivered": "–î–æ—Å—Ç–∞–≤–ª–µ–Ω"
}


# –õ–æ–≥–∏–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∫–µ
def generate_card_info(text, signature):
    if text and signature:
        return [
            ("–¢–µ–∫—Å—Ç –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∫–µ:", text),
            ("–ü–æ–¥–ø–∏—Å—å:", signature)
        ]
    elif text:
        return [
            ("–¢–µ–∫—Å—Ç –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∫–µ:", text),
            ("–ü–æ–¥–ø–∏—Å—å:", "–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏")
        ]
    elif signature:
        return [
            ("–¢–µ–∫—Å—Ç –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∫–µ:", signature)  # –ü–æ–¥–ø–∏—Å—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∫–µ
        ]
    else:
        return [
            ("–¢–µ–∫—Å—Ç –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∫–µ:", "–ë–µ–∑ –æ—Ç–∫—Ä—ã—Ç–∫–∏")
        ]


def send_order_notification(order):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ.
    :param order: –û–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
    :return: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    message_text = f"üå∏ *–ë—É–∫–µ—Ç:* {order.products.first().name if order.products.exists() else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
    message_text += f"üìç *–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:* {order.address if order.address else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∞—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç–∫–∏
    card_info = generate_card_info(order.card_text, order.signature)
    for label, value in card_info:
        message_text += f"{label} {value}\n"

    message_text += f"üí∞ *–¶–µ–Ω–∞:* {order.total_price} —Ä—É–±.\n"
    message_text += f"üìÖ *–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:* {order.created_at.strftime('%d.%m.%Y %H:%M')}\n"

    return message_text



def generate_order_message(order):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ"""
    translated_status = STATUS_TRANSLATION.get(order.status, order.status)
    return (
        f"üì¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ ‚Ññ{order.id}!\n\n"
        f"üîÑ –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: *{translated_status}*\n"
        f"üìÖ –î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: {order.created_at.strftime('%d.%m.%Y %H:%M')}\n"
        f"üíê –ë—É–∫–µ—Ç: {order.products.first().name if order.products.exists() else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {order.address}\n"
        f"üí∞ –¶–µ–Ω–∞: {order.total_price} —Ä—É–±."
    )


def generate_review_button(order):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞, –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω"""
    if order.status != "delivered":
        return None

    review_exists = Review.objects.filter(order=order).exists()

    if review_exists:
        review_url = f"{settings.SITE_URL}/product/{order.products.first().id}/"
        button_text = "üåü –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã"
    else:
        review_url = f"{settings.SITE_URL}/order/{order.id}/review/"
        button_text = "üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"

    return {"inline_keyboard": [[{"text": button_text, "url": review_url}]]}